# Server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;
	listen 443 ssl;

	root /var/www/front/dist;

	server_name movie-picker.fun;

    # RSA certificate
    ssl_certificate /etc/letsencrypt/live/movie-picker.fun/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/movie-picker.fun/privkey.pem; # managed by Certbot

    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    } # managed by Certbot

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	# location / {
	# 	# First attempt to serve request as file, then
	# 	# as directory, then fall back to displaying a 404.
	# 	try_files $uri $uri/ =404;
	# }

	location / {
		if ($prerender = 1) {
			rewrite (.*) /prerenderio last;
		}
		try_files $uri /index.html = 404;
	}

	location /prerenderio {
		if ($prerender = 0) {
			return 404;
		}

		proxy_set_header X-Prerender-Token d4D2m6yyf0cuzhgH1mIH;

		proxy_hide_header Cache-Control;
		add_header Cache-Control "private,max-age=600,must-revalidate";

		#resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
		resolver 8.8.8.8 8.8.4.4;
		set $prerender_host "service.prerender.io";
		proxy_pass https://$prerender_host;
		rewrite .* /$scheme://$host$request_uri? break;
	}

	location /api/ {
	    proxy_pass http://127.0.0.1:3000/api/;
	}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
